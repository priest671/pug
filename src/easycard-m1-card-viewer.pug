extends /layouts/dark

block beforehtml
  - const title = 'EasyCard M1 Card Viewer'

block style
  style
    :sass
      [v-cloak]
        display: none
      body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
        font-family: 'Noto Sans TC', sans-serif
      #card
        &, input.form-control
          letter-spacing: -1px
        textarea.form-control
          font-size: 12px
        span.input-group-text
          min-width: 80px
          padding: .25rem 0

block content
  #app.my-3.container-fluid(v-cloak)
    h2.mb-3.text-center=title
    #card.text-monospace.d-flex.flex-column.flex-md-row
      .mr-sm-3
        .form-group
          label 卡片基本資料
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡片編號
              input.form-control(readonly, :value="card?.uid")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="card?.balance")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 預設加值
              input.form-control(readonly, :value="card?.autoload")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 銀行編號
              input.form-control(readonly, :value="card?.bank")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 每日限額
              input.form-control(readonly, :value="card?.quota?.daily")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 單次限額
              input.form-control(readonly, :value="card?.quota?.once")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 限額日期
              input.form-control(readonly, :value="card?.quota?.date")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 已用限額
              input.form-control(readonly, :value="card?.quota?.used")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 身份別
              input.form-control(readonly, :value="card?.profile?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 身份到期
              input.form-control(readonly, :value="card?.profile?.exp")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡別
              input.form-control(readonly, :value="card?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 區碼
              input.form-control(readonly, :value="card?.area")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 發卡時間
              input.form-control(readonly, :value="card?.issued")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 卡片效期
              input.form-control(readonly, :value="card?.exp")
        .form-group(v-if="card.urt")
          label 轉乘紀錄
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易序號
              input.form-control(readonly, :value="card.urt?.tsqn")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 時間
              input.form-control(readonly, :value="card.urt?.time")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易方式
              input.form-control(readonly, :value="card.urt?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 扣款
              input.form-control(readonly, :value="card.urt?.amount")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="card.urt?.ev")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 優惠方式
              input.form-control(readonly, :value="card.urt?.discount")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 轉乘前群組
              input.form-control(readonly, :value="card.urt?.tgc1")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 轉乘後群組
              input.form-control(readonly, :value="card.urt?.tgc2")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 舊轉乘群組
              input.form-control(readonly, :value="card.urt?.tgc0")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 場站編號
              input.form-control(readonly, :value="card.urt?.location")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 設備編號
              input.form-control(readonly, :value="card.urt?.device")
        .form-group(v-for="txn of [card.credit]")
          label 最近加值交易
          .row.mx-n1
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易序號
              input.form-control(readonly, :value="txn?.tsqn")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 時間
              input.form-control(readonly, :value="txn?.time")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 交易方式
              input.form-control(readonly, :value="txn?.type")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 加值金額
              input.form-control(readonly, :value="txn?.amount")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 餘額
              input.form-control(readonly, :value="txn?.ev")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 業者編號
              input.form-control(readonly, :value="txn?.provider")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 場站編號
              input.form-control(readonly, :value="txn?.location")
            .mb-1.px-1.col-12.col-md-6.col-lg-4.col-xl-3: .input-group.input-group-sm
              .input-group-prepend: span.input-group-text.justify-content-center 設備編號
              input.form-control(readonly, :value="txn?.device")
        .form-group
          label 最近扣款交易
          .table-responsive
            table.table.table-sm.table-bordered.table-striped.text-center
              thead: tr.text-nowrap
                th #
                th 時間
                th 類別
                th 扣款
                th 餘額
                th 業者
                th 場站
                th 設備
              tbody
                tr(v-for="txn of card.deducts")
                  th {{ txn?.tsqn }}
                  td {{ txn?.time }}
                  td {{ txn?.type }}
                  td {{ txn?.amount }}
                  td {{ txn?.ev }}
                  td {{ txn?.provider }}
                  td {{ txn?.location }}
                  td {{ txn?.device }}
        .form-group
          label 公車進出站紀錄
        .form-group
          label 捷運進出站紀錄
      .form-group(style="min-width: 240px")
        label EML (HEX)
        textarea.form-control.form-control-sm(rows="65", v-model="i.eml")

block script
  script(src="https://cdn.jsdelivr.net/npm/moment@2/moment.min.js")
  script(src="https://cdn.jsdelivr.net/npm/moment@2/locale/zh-tw.min.js")
  script.
    const ECC_PROFILES = {
      '00': '一般',
      '01': '敬老一',
      '02': '敬老二',
      '03': '愛心',
      '04': '愛陪',
      '05': '學生',
      '06': '軍人',
      '07': '警察',
      '08': '孩童',
    }
    const ECC_CARD_TYPES = {
      '00': '一般卡',
      '01': '強制記名卡',
      '02': '一般記名卡',
      '03': '紀念卡',
      '04': '替代卡',
      '05': '特製卡',
      '06': 'IC商品',
      '07': '測試卡',
      '08': '聯名卡',
      '09': '特種票',
      '0A': '數位學生證',
      '0B': '代幣卡',
      '0C': '腳踏車',
      '0D': 'iCash卡',
    }
    const ECC_URT_DISCOUNTS = {
      '00': '刷進 (原價)',
      '01': '刷進 (打折)', // 有打折
      '02': '刷進 (抵免)', // 抵免或社福點數
      '03': '刷進 (定期票)', // 旅遊票或月票
      10: '刷出 (原價)',
      11: '刷出 (打折)', // 有打折
      12: '刷出 (抵免)', // 抵免或社福點數
      13: '刷出 (定期票)', // 旅遊票或月票
    }
    const ECC_TXN_TYPES = {
      '00': '刷進扣款',
      '02': '加值',
      10: '刷出扣款',
      20: '小額扣款',
      40: '自動加值',
    }
    const ECC_PROVIDERS = {
      43: '統聯(中部)',
      '5A': 'YouBike',
      '5B': 'YouBike',
      '5C': 'YouBike',
      '5D': 'YouBike',
      '5E': 'YouBike',
      '5F': 'YouBike',
      60: 'YouBike',
      61: 'YouBike',
      '6E': 'YouBike',
      '6F': 'YouBike',
      70: 'YouBike',
      71: 'YouBike',
      72: 'YouBike',
      86: '全家',
      C2: 'YouBike',
    }
    const arrJoin = arr => arr.join('')
    const arrRevJoin = arr => arr.reverse().join('')
    const btoCardType = byte => _.get(ECC_CARD_TYPES, byte, `0x${byte}`)
    const btoDatetimeStr = bytes => dayjs.unix(btoUint(bytes) - 28800).format('YYYY-MM-DD HH:mm:ss')
    const btoProfile = byte => _.get(ECC_PROFILES, byte, `0x${byte}`)
    const btoProvider = byte => _.get(ECC_PROVIDERS, byte, `0x${byte}`)
    const btoTxnType = byte => _.get(ECC_TXN_TYPES, byte, `0x${byte}`)
    const btoUint = bytes => _.parseInt(arrRevJoin(bytes), 16)
    const btoUrtDiscount = byte => _.get(ECC_URT_DISCOUNTS, byte, `0x${byte}`)
    const btoDateStr = bytes => {
      const u = btoUint(bytes)
      return u <= 0 ? '未知' : dayjs(`${1980 + (u >> 9)}-${(u >> 5) & 0xF}-${u & 0x1F}`).format('YYYY-MM-DD')
    }
    const btoInt = bytes => {
      const mask = 2 ** (bytes.length * 8 - 1)
      const uint = btoUint(bytes)
      return (mask & uint) ? (uint - mask - mask) : uint
    }
    const btoTxn = bytes => ({
      amount: btoInt(bytes.slice(6, 8)),
      device: `0x${arrRevJoin(bytes.slice(12, 16))}`,
      ev: btoInt(bytes.slice(8, 10)),
      location: `0x${bytes[11]}`,
      provider: btoProvider(bytes[10]),
      tgc0: `0x${bytes[10]}`, // 舊轉乘群組
      time: btoDatetimeStr(bytes.slice(1, 5)),
      tsqn: btoInt([bytes[0]]),
      type: btoTxnType(bytes[5]),
    })
    window.vm = new Vue({
      el: '#app',
      data: {
        i: {
          eml: '',
        },
      },
      async mounted () {
        // 自動儲存功能
        try {
          const saved = JSON5.parse(localStorage.getItem(location.pathname))
          if (saved) this.$set(this, 'i', { ...this.i, ...saved })
        } catch (err) {}
        this.$watch('i', () => {
          localStorage.setItem(location.pathname, JSON5.stringify(this.i))
        }, { deep: true })
      },
      computed: {
        bytes () {
          const bytes = _.toUpper(this.i.eml).replace(/-/g, '0').replace(/[^0-9A-F]/g, '')
          if (bytes.length !== 2048) return
          return _.chunk(bytes, 2).map(arrJoin)
        },
        card () {
          const bytes = this.bytes
          if (!bytes) return {}
          const credit = btoTxn(bytes.slice(160, 176)) // 最近加值交易
          const deducts = _.sortBy(_.map([16, 17, 18, 20, 21, 22], blk => btoTxn(bytes.slice(blk * 16, blk * 16 + 16))), ['time'])

          // 處理轉乘資料 Usage TXN Record for Transfer
          const transfers = _.mapKeys(_.map([13, 14], blk => btoTxn(bytes.slice(blk * 16, blk * 16 + 16))), 'tsqn')
          const tsqnUrt = btoUint([bytes[192]])
          const urt = !_.has(transfers, tsqnUrt) ? null : {
            ...transfers[tsqnUrt],
            discount: btoUrtDiscount(bytes[194]), // 優惠方式
            tgc1: `0x${bytes[205]}`, // 轉乘前群組
            tgc2: `0x${bytes[204]}`, // 轉乘後群組
          }

          return {
            area: `0x${bytes[90]}`, // 區碼
            autoload: btoUint(bytes.slice(81, 83)), // 自動加值
            balance: btoInt(bytes.slice(144, 147)), // 餘額
            bank: `0x${bytes[91]}`, // 銀行編號
            credit, // 最近加值交易
            deducts, // 最近扣款交易
            exp: btoDatetimeStr(bytes.slice(73, 77)), // 有效時間
            issued: btoDatetimeStr(bytes.slice(69, 73)), // 製造時間
            type: btoCardType(bytes[93]), // 卡別
            uid: arrRevJoin(bytes.slice(0, 4)), // 卡片編號
            urt, // 轉乘交易紀錄
            quota: {
              daily: btoUint(bytes.slice(83, 85)), // 日限額金額
              date: btoDateStr(bytes.slice(1003, 1005)), // 日限額日期
              once: btoUint(bytes.slice(85, 87)), // 日限額金額
              used: btoUint(bytes.slice(1005, 1008)), // 日限額金額
            },
            profile: { // 身份別與到期時間
              exp: btoDatetimeStr(bytes.slice(961, 965)),
              type: btoProfile(bytes[960]),
            },
          }
        },
      },
    })
